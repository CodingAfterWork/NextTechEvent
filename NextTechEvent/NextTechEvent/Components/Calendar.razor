@using System.Globalization
@using NextTechEvent.Data.Index
@inject INextTechEventApi _api

<table border="1">
    <tr>
        <th></th>
        @for (int month = 1; month <= 12; month++)
        {
            <th>@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)</th>
        }
    </tr>
    @for (int day = 1; day <= 31; day++)
    {
        <tr>
            <td>@day</td>
            @for (int month = 1; month <= 12; month++)
            {
                @if (DateTime.DaysInMonth(year, month) >= day)
                {
                    var d = new DateOnly(year, month, day);
                    var count = dates.FirstOrDefault(a => a.Date == d)?.Count??0;
                    <td class="@HeatMapColor(count)">
                        <small>@d.DayOfWeek</small>    
                        @count
                    </td>
                    
                }
                else
                {
                    <td></td>
                }
            }
        </tr>
    }
</table>
@code {
    int year = 2022;
    List<ConferenceCountByDate> dates = new();
    int max = 1;

    protected override async Task OnParametersSetAsync()
    {
        DateOnly start = new DateOnly(year, 1, 1);
        DateOnly end = new DateOnly(year, 12, 31);
        dates = await _api.GetConferenceCountByDate(start, end);
        max = dates.Max(c => c.Count);
        await base.OnParametersSetAsync();
    }

    public string HeatMapColor(decimal value)
    {
        decimal val = value / max;

        return val switch
        {
            0 => "Color0",
            > 0 and <= 0.2M => "Color1",
            > 0.2M and <= 0.4M => "Color20",
            > 0.4M and <= 0.6M => "Color40",
            > 0.6M and <= 0.8M => "Color60",
            _ => "Color80"
        };
    }
}
