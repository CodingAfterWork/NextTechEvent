@page "/conferences/{*ConferenceId}"
@using System.Globalization
@using Raven.Client.Documents.Session.TimeSeries

@inject INextTechEventApi _api

@if (conference != null)
{
    <div>
        <h1>@conference.Name</h1>
        <h2>@conference.EventStart.ToString("MMMM dd, yyyy",culture) - @conference.EventEnd.ToString("MMMM dd, yyyy",culture)</h2>
        <h3>@conference.City</h3>
        @if(weather!=null)
        {
            <ul>
            @foreach (var temp in weather)
            {
                <li>
                    @temp.Timestamp.ToString("MMM dd") 
                    @temp.Value.Average.ToString("N1",culture)
                </li>
            }
            </ul>
        }
        @if (conference.CfpEndDate > DateTime.Now && !string.IsNullOrEmpty(conference.CfpUrl))
        {
            <a href="@conference.CfpUrl">Go to call for paper</a> <text>closing in </text> @conference.ClosingIn<br/>
        }
        @if (!string.IsNullOrEmpty(conference.EventUrl))
        {
            <a href="@conference.EventUrl">Go to the conference</a>
        }

        <OverlappingConferences Start="conference.EventStart" End="conference.EventEnd"/>
    </div>
}

@code{
    [Parameter]
    public string ConferenceId { get; set; }
    Conference? conference = null;
    CultureInfo culture=CultureInfo.GetCultureInfo("en-US");
    TimeSeriesEntry<WeatherData>[] weather = null;

    protected override async Task OnParametersSetAsync()
    {
        conference = await _api.GetConferenceAsync(ConferenceId);
        weather = await _api.GetWeatherTimeSeriesAsync(ConferenceId);
        await  base.OnParametersSetAsync();
    }
}