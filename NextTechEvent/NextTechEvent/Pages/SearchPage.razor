@page "/search"
@inject INextTechEventApi _api

<input type="text" placeholder="Search for conference name, city, country or tags" class="search" @bind="searchterm" @onkeypress="Search" @bind:event="oninput" />

<table>
    <tr>
        <th class="date p-2">Event start</th>
        <th>Name</th>
        <th class="text-end p-2">CFP</th>
    </tr>
    <Virtualize Items="Conferences" Context="c">
        <tr>
            <td class="date p-2">
                @c.EventStart
            </td>
            <td class="conferencename">
                <a href="@($"Conferences/{c.Id}")">@c.Name</a>
            </td>
            <td class="text-end p-2">
                @c.CfpEndDate.ToClosingIn()
            </td>
        </tr>
    </Virtualize>
</table>

@code {
    public List<ConferenceSearchTerm> Conferences { get; set; } = new();
    string searchterm = "";
    async Task Search(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            if (!string.IsNullOrEmpty(searchterm))
            {
                Conferences = (await _api.SearchConferencesAsync(searchterm)).OrderByDescending(c => c.EventStart).ToList();
            }
            else
            {
                Conferences = new();
            }
        }
    }

}